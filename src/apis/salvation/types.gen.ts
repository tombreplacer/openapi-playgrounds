// This file is auto-generated by @hey-api/openapi-ts

export type IPagingState = {
    readonly indexFrom: number;
    readonly pageIndex: number;
    readonly pageSize: number;
    readonly totalCount: number;
    readonly totalPages: number;
    readonly hasPreviousPage: boolean;
    readonly hasNextPage: boolean;
};

export type NewsCategoryCreateDto = {
    title: string;
    published: boolean;
    onMainPageBottomSlider: boolean;
    onRightPanel: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsCategoryDto = {
    id: string;
    title: string;
    published: boolean;
    itemsCount: number;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    mainPageBottomSlider: boolean;
    rightPanel: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsCategoryDtoSalvationResponse = {
    success: boolean;
    message: string;
    traceId: string;
    details?: string | null;
    entityId?: string | null;
    entityType?: string | null;
    relatedObject?: NewsCategoryDto;
};

export type NewsCategoryListItemDto = {
    id: string;
    title: string;
    published: boolean;
    itemsCount: number;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    mainPageBottomSlider: boolean;
    rightPanel: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsCategoryListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsCategoryListItemDto>;
};

export type NewsCategoryUpdateDto = {
    id: string;
    title: string;
    published: boolean;
    mainPageBottomSlider: boolean;
    rightPanel: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsSignatureCreateDto = {
    title: string;
    shortTitle: string;
    published: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsSignatureDto = {
    id: string;
    title: string;
    shortTitle: string;
    published: boolean;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    isFilterVisible: boolean;
    order: number;
    itemsCount: number;
};

export type NewsSignatureDtoSalvationResponse = {
    success: boolean;
    message: string;
    traceId: string;
    details?: string | null;
    entityId?: string | null;
    entityType?: string | null;
    relatedObject?: NewsSignatureDto;
};

export type NewsSignatureListItemDto = {
    id: string;
    title: string;
    shortTitle: string;
    published: boolean;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    isFilterVisible: boolean;
    order: number;
    itemsCount: number;
};

export type NewsSignatureListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsSignatureListItemDto>;
};

export type NewsSignatureUpdateDto = {
    id: string;
    title: string;
    shortTitle: string;
    published: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsTagListItemDto = {
    id: string;
    title: string;
    published: boolean;
    itemsCount: number;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    visibleOnlyInside: boolean;
    order: number;
};

export type NewsTagListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsTagListItemDto>;
};

export type SalvationResponse = {
    success: boolean;
    message: string;
    traceId: string;
    details?: string | null;
    entityId?: string | null;
    entityType?: string | null;
    relatedObject?: unknown;
};

export type NewsCategoryGetPagedListData = {
    query?: {
        pageIndex?: number;
        pageSize?: number;
        searchPattern?: string;
    };
};

export type NewsCategoryGetPagedListResponse = NewsCategoryListItemDtoIPagedList;

export type NewsCategoryGetPagedListError = SalvationResponse;

export type NewsCategoryCreateData = {
    body?: NewsCategoryCreateDto;
};

export type NewsCategoryCreateResponse = SalvationResponse;

export type NewsCategoryCreateError = SalvationResponse;

export type NewsCategoryUpdateData = {
    body?: NewsCategoryUpdateDto;
};

export type NewsCategoryUpdateResponse = NewsCategoryDtoSalvationResponse;

export type NewsCategoryUpdateError = SalvationResponse;

export type NewsCategoryGetByIdData = {
    path: {
        id: string;
    };
};

export type NewsCategoryGetByIdResponse = NewsCategoryDto;

export type NewsCategoryGetByIdError = SalvationResponse;

export type NewsCategoryRemoveData = {
    path: {
        id: string;
    };
};

export type NewsCategoryRemoveResponse = SalvationResponse;

export type NewsCategoryRemoveError = SalvationResponse;

export type NewsSignatureGetPagedListData = {
    query?: {
        pageIndex?: number;
        pageSize?: number;
        searchPattern?: string;
    };
};

export type NewsSignatureGetPagedListResponse = NewsSignatureListItemDtoIPagedList;

export type NewsSignatureGetPagedListError = SalvationResponse;

export type NewsSignatureCreateData = {
    body?: NewsSignatureCreateDto;
};

export type NewsSignatureCreateResponse = SalvationResponse;

export type NewsSignatureCreateError = SalvationResponse;

export type NewsSignatureUpdateData = {
    body?: NewsSignatureUpdateDto;
};

export type NewsSignatureUpdateResponse = NewsSignatureDtoSalvationResponse;

export type NewsSignatureUpdateError = SalvationResponse;

export type NewsSignatureGetByIdData = {
    path: {
        id: string;
    };
};

export type NewsSignatureGetByIdResponse = NewsSignatureDto;

export type NewsSignatureGetByIdError = SalvationResponse;

export type NewsSignatureRemoveData = {
    path: {
        id: string;
    };
};

export type NewsSignatureRemoveResponse = SalvationResponse;

export type NewsSignatureRemoveError = SalvationResponse;

export type NewsTagGetPagedListResponse = NewsTagListItemDtoIPagedList;

export type NewsTagGetPagedListError = SalvationResponse;

export type UploadsGetFileResponse = Array<unknown>;

export type UploadsGetFileError = SalvationResponse;

export type UploadsGetFile2Response = Array<unknown>;

export type UploadsGetFile2Error = SalvationResponse;

export type $OpenApiTs = {
    '/admin/api/NewsCategory': {
        get: {
            req: NewsCategoryGetPagedListData;
            res: {
                /**
                 * OK
                 */
                '200': NewsCategoryListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
        post: {
            req: NewsCategoryCreateData;
            res: {
                /**
                 * OK
                 */
                '200': SalvationResponse;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
        put: {
            req: NewsCategoryUpdateData;
            res: {
                /**
                 * OK
                 */
                '200': NewsCategoryDtoSalvationResponse;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
    '/admin/api/NewsCategory/{id}': {
        get: {
            req: NewsCategoryGetByIdData;
            res: {
                /**
                 * OK
                 */
                '200': NewsCategoryDto;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Not Found
                 */
                '404': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
        delete: {
            req: NewsCategoryRemoveData;
            res: {
                /**
                 * OK
                 */
                '200': SalvationResponse;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
    '/admin/api/NewsSignature': {
        get: {
            req: NewsSignatureGetPagedListData;
            res: {
                /**
                 * OK
                 */
                '200': NewsSignatureListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
        post: {
            req: NewsSignatureCreateData;
            res: {
                /**
                 * OK
                 */
                '200': SalvationResponse;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
        put: {
            req: NewsSignatureUpdateData;
            res: {
                /**
                 * OK
                 */
                '200': NewsSignatureDtoSalvationResponse;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
    '/admin/api/NewsSignature/{id}': {
        get: {
            req: NewsSignatureGetByIdData;
            res: {
                /**
                 * OK
                 */
                '200': NewsSignatureDto;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
        delete: {
            req: NewsSignatureRemoveData;
            res: {
                /**
                 * OK
                 */
                '200': SalvationResponse;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
    '/admin/api/NewsTag': {
        get: {
            res: {
                /**
                 * OK
                 */
                '200': NewsTagListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
    '/Uploads/GetFile': {
        get: {
            res: {
                /**
                 * OK
                 */
                '200': Array<unknown>;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
    '/Uploads/GetFile2': {
        get: {
            res: {
                /**
                 * OK
                 */
                '200': Array<unknown>;
                /**
                 * Bad Request
                 */
                '400': SalvationResponse;
                /**
                 * Internal Server Error
                 */
                '500': SalvationResponse;
            };
        };
    };
};