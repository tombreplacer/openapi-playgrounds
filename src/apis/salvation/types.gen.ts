// This file is auto-generated by @hey-api/openapi-ts

export type IPagingState = {
    readonly indexFrom: number;
    readonly pageIndex: number;
    readonly pageSize: number;
    readonly totalCount: number;
    readonly totalPages: number;
    readonly hasPreviousPage: boolean;
    readonly hasNextPage: boolean;
};

export type MiniatureImageDto = {
    title: string;
    author: string | null;
    imageSourceUri: string;
    imageMiniatureUri: string;
    imageMiniaturePillarboxedUri: string;
};

export type NewsCategoryListItemDto = {
    id: string;
    title: string;
    published: boolean;
    itemsCount: number;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    mainPageBottomSlider: boolean;
    rightPanel: boolean;
    filterVisible: boolean;
    order: number;
};

export type NewsCategoryListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsCategoryListItemDto>;
};

export type NewsCategoryShortDto = {
    id: string;
    title: string;
};

export type NewsListItemDto = {
    id: string;
    title: string;
    announcement: string;
    miniature?: MiniatureImageDto;
    category: NewsCategoryShortDto;
    tags: Array<NewsTagShortDto>;
    signature?: NewsSignatureShortDto;
    publishedOnUtc: string;
    imagesCount: number;
    visitsCount: number;
    pageName: string;
    videoTagsCount: number;
    audioTagsCount: number;
};

export type NewsListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsListItemDto>;
};

export type NewsSignatureCreateDto = {
    title: string;
    shortTitle: string;
    published: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsSignatureDto = {
    id: string;
    title: string;
    shortTitle: string;
    published: boolean;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    isFilterVisible: boolean;
    order: number;
    itemsCount: number;
};

export type NewsSignatureDtoSalvationResponse = {
    success: boolean;
    message: string;
    traceId: string;
    details?: string | null;
    entityId?: string | null;
    entityType?: string | null;
    relatedObject?: NewsSignatureDto;
};

export type NewsSignatureListItemDto = {
    id: string;
    title: string;
    shortTitle: string;
    published: boolean;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    isFilterVisible: boolean;
    order: number;
    itemsCount: number;
};

export type NewsSignatureListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsSignatureListItemDto>;
};

export type NewsSignatureShortDto = {
    id: string;
    title: string;
};

export type NewsSignatureUpdateDto = {
    id: string;
    title: string;
    shortTitle: string;
    published: boolean;
    isVisibleInFilter: boolean;
    order: number;
};

export type NewsTagListItemDto = {
    id: string;
    title: string;
    published: boolean;
    itemsCount: number;
    createdBy: string;
    updatedBy: string;
    createdOnUtc: string;
    updatedOnUtc: string;
    visibleOnlyInside: boolean;
    order: number;
};

export type NewsTagListItemDtoIPagedList = {
    state: IPagingState;
    readonly items: Array<NewsTagListItemDto>;
};

export type NewsTagShortDto = {
    id: string;
    title: string;
};

export type QueryOrder = 'Title' | 'PublishedOn' | 'Random';

export type QueryOrderDirection = 'Ascending' | 'Descending';

export type SalvationResponse = {
    success: boolean;
    message: string;
    traceId: string;
    details?: string | null;
    entityId?: string | null;
    entityType?: string | null;
    relatedObject?: unknown;
};

export type NewsGetPagedListData = {
    categoryTitle?: string;
    dateFrom?: string;
    dateTo?: string;
    minAudioCount?: number;
    minVideoCount?: number;
    onBanner?: boolean;
    onHome?: boolean;
    order?: QueryOrder;
    orderDirection?: QueryOrderDirection;
    pageIndex?: number;
    pageSize?: number;
    searchPattern?: string;
    signatureTitleShort?: string;
    tagTitle?: string;
};

export type NewsGetPagedListResponse = NewsListItemDtoIPagedList;

export type NewsCategoryGetPagedListResponse = NewsCategoryListItemDtoIPagedList;

export type NewsSignatureGetPagedListResponse = NewsSignatureListItemDtoIPagedList;

export type NewsSignatureCreateData = {
    requestBody?: NewsSignatureCreateDto;
};

export type NewsSignatureCreateResponse = SalvationResponse;

export type NewsSignatureUpdateData = {
    requestBody?: NewsSignatureUpdateDto;
};

export type NewsSignatureUpdateResponse = NewsSignatureDtoSalvationResponse;

export type NewsSignatureGetByIdData = {
    id: string;
};

export type NewsSignatureGetByIdResponse = NewsSignatureDto;

export type NewsSignatureRemoveData = {
    id: string;
};

export type NewsSignatureRemoveResponse = SalvationResponse;

export type NewsTagGetPagedListResponse = NewsTagListItemDtoIPagedList;

export type UploadsGetFileResponse = Array<unknown>;

export type UploadsGetFile2Response = Array<unknown>;

export type $OpenApiTs = {
    '/admin/api/News': {
        get: {
            req: NewsGetPagedListData;
            res: {
                /**
                 * OK
                 */
                200: NewsListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
    '/admin/api/NewsCategory': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: NewsCategoryListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
    '/admin/api/NewsSignature': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: NewsSignatureListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
        post: {
            req: NewsSignatureCreateData;
            res: {
                /**
                 * OK
                 */
                200: SalvationResponse;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
        put: {
            req: NewsSignatureUpdateData;
            res: {
                /**
                 * OK
                 */
                200: NewsSignatureDtoSalvationResponse;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
    '/admin/api/NewsSignature/{id}': {
        get: {
            req: NewsSignatureGetByIdData;
            res: {
                /**
                 * OK
                 */
                200: NewsSignatureDto;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
        delete: {
            req: NewsSignatureRemoveData;
            res: {
                /**
                 * OK
                 */
                200: SalvationResponse;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
    '/admin/api/NewsTag': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: NewsTagListItemDtoIPagedList;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
    '/Uploads/GetFile': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<unknown>;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
    '/Uploads/GetFile2': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<unknown>;
                /**
                 * Bad Request
                 */
                400: SalvationResponse;
                /**
                 * Internal Server Error
                 */
                500: SalvationResponse;
            };
        };
    };
};